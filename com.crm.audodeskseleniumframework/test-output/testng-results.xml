<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="24156" started-at="2022-03-29T14:44:41 IST" finished-at="2022-03-29T14:45:05 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="24156" started-at="2022-03-29T14:44:41 IST" finished-at="2022-03-29T14:45:05 IST">
      <class name="practice.ExtentReportPractice">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="beforeSuite" is-config="true" duration-ms="9" started-at="2022-03-29T14:44:41 IST" finished-at="2022-03-29T14:44:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="beforeTest" is-config="true" duration-ms="1" started-at="2022-03-29T14:44:41 IST" finished-at="2022-03-29T14:44:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="beforeClass" is-config="true" duration-ms="6704" started-at="2022-03-29T14:44:41 IST" finished-at="2022-03-29T14:44:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="beforeMethod" is-config="true" duration-ms="2767" started-at="2022-03-29T14:44:48 IST" finished-at="2022-03-29T14:44:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createOrg()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="createOrg" duration-ms="17" started-at="2022-03-29T14:44:51 IST" finished-at="2022-03-29T14:44:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrg -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="afterMethod" is-config="true" duration-ms="3207" started-at="2022-03-29T14:44:51 IST" finished-at="2022-03-29T14:44:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="beforeMethod" is-config="true" duration-ms="1705" started-at="2022-03-29T14:44:54 IST" finished-at="2022-03-29T14:44:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="createOrgWithDate()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="createOrgWithDate" duration-ms="27" started-at="2022-03-29T14:44:56 IST" finished-at="2022-03-29T14:44:56 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at practice.ExtentReportPractice.createOrgWithDate(ExtentReportPractice.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrgWithDate -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="afterMethod" is-config="true" duration-ms="2861" started-at="2022-03-29T14:44:56 IST" finished-at="2022-03-29T14:44:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="beforeMethod" is-config="true" duration-ms="1824" started-at="2022-03-29T14:44:59 IST" finished-at="2022-03-29T14:45:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="createOrgWithMandatory()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="createOrgWithMandatory" duration-ms="1" started-at="2022-03-29T14:45:01 IST" finished-at="2022-03-29T14:45:01 IST">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipped
at practice.ExtentReportPractice.createOrgWithMandatory(ExtentReportPractice.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrgWithMandatory -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="afterMethod" is-config="true" duration-ms="2778" started-at="2022-03-29T14:45:01 IST" finished-at="2022-03-29T14:45:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="afterClass" is-config="true" duration-ms="1774" started-at="2022-03-29T14:45:03 IST" finished-at="2022-03-29T14:45:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="afterTest" is-config="true" duration-ms="1" started-at="2022-03-29T14:45:05 IST" finished-at="2022-03-29T14:45:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:practice.ExtentReportPractice@64f6106c]" name="afterSuite" is-config="true" duration-ms="1" started-at="2022-03-29T14:45:06 IST" finished-at="2022-03-29T14:45:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- practice.ExtentReportPractice -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
